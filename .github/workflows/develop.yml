name: Docker Develop Release

on:
  push:
    branches: [ develop ]

jobs:

  build-binaries:
    name: Build Standalone Binaries (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.12']
    env:
      APP_NAME: qbit-manage
      ENTRY: qbit_manage.py
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v5
        with:
          ref: develop

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Upgrade Pip and install project + PyInstaller
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install . pyinstaller

      - name: Compute add-data separator
        id: sep
        shell: bash
        run: |
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            echo "SEP=;" >> $GITHUB_OUTPUT
          else
            echo "SEP=:" >> $GITHUB_OUTPUT
          fi

      - name: Build (PyInstaller onefile)
        shell: bash
        run: |
          ADD_WEBUI="web-ui${{ steps.sep.outputs.SEP }}web-ui"
          ADD_SAMPLE_CFG="config/config.yml.sample${{ steps.sep.outputs.SEP }}config"
          ADD_LOGO="icons/qbm_logo.png${{ steps.sep.outputs.SEP }}."
          ADD_VERSION="VERSION${{ steps.sep.outputs.SEP }}."
          ICON_ARG=""
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            ICON_ARG=--icon=icons/qbm_logo.ico
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            ICON_ARG=--icon=icons/qbm_logo.icns
          else
            # Linux: optional icon (helps some desktop environments)
            if [[ -f icons/qbm_logo.png ]]; then
              ICON_ARG=--icon=icons/qbm_logo.png
            elif [[ -f icons/qbm_logo.ico ]]; then
              ICON_ARG=--icon=icons/qbm_logo.ico
            fi
          fi
          pyinstaller --noconfirm \
                      --clean \
                      --onefile \
                      --name "${APP_NAME}" \
                      --add-data "$ADD_WEBUI" \
                      --add-data "$ADD_SAMPLE_CFG" \
                      --add-data "$ADD_LOGO" \
                      --add-data "$ADD_VERSION" \
                      $ICON_ARG \
                      "${ENTRY}"

      - name: Rename output for OS
        shell: bash
        run: |
          mkdir -p out
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            mv "dist/${APP_NAME}.exe" "out/${APP_NAME}-windows-amd64.exe"
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            mv "dist/${APP_NAME}" "out/${APP_NAME}-macos-x86_64"
          else
            mv "dist/${APP_NAME}" "out/${APP_NAME}-linux-amd64"
          fi

      - name: Upload develop build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}-${{ runner.os }}-develop
          path: out/*

  docker-develop:
    runs-on: ubuntu-latest
    needs: build-binaries

    steps:
      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Check Out Repo
        uses: actions/checkout@v5
        with:
          ref: develop

      - name: Trigger Hotio Webhook
        uses: joelwmale/webhook-action@master
        with:
          url: ${{ secrets.HOTIO_WEBHOOK_URL }}
          headers: '{"Authorization": "Bearer ${{ secrets.HOTIO_WEBHOOK_SECRET }}"}'
          body: '{ "application": "qbitmanage", "branch":  "nightly" }'

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ env.OWNER_LC }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          build-args: |
            "BRANCH_NAME=develop"
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/qbit_manage:develop
            ghcr.io/${{ env.OWNER_LC }}/qbit_manage:develop
